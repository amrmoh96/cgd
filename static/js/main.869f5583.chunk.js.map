{"version":3,"sources":["components/Login/login.jsx","components/navbar/navbar.jsx","components/dashboard/dashboard.jsx","router.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","user","onLogin","onPasswordChange","onUsernameChange","className","type","placeholder","value","username","onChange","password","onClick","href","Navbar","onSignOut","DashBoard","useState","users","setUsers","useEffect","lineChart","document","getElementById","Chart","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","pointBackgroundColor","pointBorderColor","pointBorderWidth","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","display","pieChart","gridLines","xAxes","fetch","then","res","json","Fragment","id","style","textAlign","marginBottom","method","body","JSON","stringify","name","email","headers","response","cellPadding","cellSpacing","map","index","key","Navigation","path","App","setUser","isLoggedIn","setisLoggedIn","getUser","window","atob","doLogin","localStorage","parse","removeItem","_user","btoa","setItem","e","target","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.869f5583.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./login.css\";\r\n\r\nfunction Login({ user, onLogin, onPasswordChange, onUsernameChange }) {\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"login__title\">LOGIN</h1>\r\n      <div className=\"login__box\">\r\n        <form>\r\n          <div className=\"login__input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={user.username || ''}\r\n              onChange={onUsernameChange}\r\n            />\r\n          </div>\r\n          <div className=\"login__input\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              value={user.password || ''}\r\n              onChange={onPasswordChange}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onLogin(user)}\r\n            className=\"login__button\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        <a className=\"login__forget__password__link\" href=\"/\">\r\n          Forget password?\r\n        </a>\r\n      </div>\r\n      <p className=\"login__signup\">\r\n        Don't have an account{\" \"}\r\n        <b>\r\n          <u>Sign Up now</u>\r\n        </b>\r\n      </p>\r\n      <p className=\"login__copyrights\">&copy; Copy rights 2020-2021 reserved</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './navbar.css'\r\n\r\n\r\nconst Navbar = ({onSignOut}) => {\r\n    return(\r\n        <div className=\"navbar\">\r\n            <h2>Welcome</h2>\r\n            <button className='navbar__signout' onClick={onSignOut}>Sign Out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../navbar/navbar\";\r\nimport \"./dashboard.css\";\r\nimport Chart from \"chart.js\";\r\nconst DashBoard = ({ onSignOut }) => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //    line chart\r\n    const lineChart = document.getElementById(\"lineChart\");\r\n    new Chart(lineChart, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n        datasets: [\r\n          {\r\n            label: \"# numbers\",\r\n            data: [0, 1, 3, 2, 3, 5, 4, 3, 1, 2],\r\n            backgroundColor: \"#0374ff\",\r\n            borderColor: \"#0374ff\",\r\n            borderWidth: 3,\r\n            // lineTension: 0,\r\n            fill: false,\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderColor: \"#0374ff\",\r\n            pointBorderWidth: 2,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n\r\n    // pie chart\r\n    const pieChart = document.getElementById(\"pieChart\");\r\n    new Chart(pieChart, {\r\n      type: \"doughnut\",\r\n      data: {\r\n        labels: [\"Red\", \"Blue\", \"Green\"],\r\n        datasets: [\r\n          {\r\n            data: [4, 2, 3],\r\n            backgroundColor: [\"Red\", \"Blue\", \"Green\"],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                display: false,\r\n              },\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                display: false,\r\n              },\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n\r\n    // users list\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then((res) => res.json())\r\n      .then((json) => setUsers(json));\r\n  }, []);\r\n\r\n  const addUser = () => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: \"Jhon\",\r\n        username: \"Jhon Doe\",\r\n        email: \"JhonDoe@email.com\",\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        setUsers([...users, json]);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar onSignOut={onSignOut} />\r\n      <div className=\"body__wrapper\">\r\n        <div className=\"sidebar\"></div>\r\n        <div className=\"dashboard\">\r\n          <div className=\"dashboard__charts\">\r\n            <div className=\"chart__container\">\r\n              <canvas id=\"lineChart\"></canvas>\r\n            </div>\r\n            <div className=\"chart__container\">\r\n              <canvas id=\"pieChart\"></canvas>\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard__table\">\r\n            <div style={{ textAlign: \"right\", marginBottom: \"10px\" }}>\r\n              <button onClick={addUser}>Add User</button>\r\n            </div>\r\n            <table cellPadding=\"0\" cellSpacing=\"0\">\r\n              <thead>\r\n                <tr>\r\n                  <th>username</th>\r\n                  <th>name</th>\r\n                  <th>email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user, index) => (\r\n                  <tr key={index}>\r\n                    <td>{user.username}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>\r\n                      <a href={\"mailto:\" + user.email}>{user.email}</a>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    // Link\r\n  } from \"react-router-dom\";\r\nimport DashBoard from './components/dashboard/dashboard';\r\n\r\n\r\nconst Navigation = ({onSignOut}) => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/users\">Users</Link>\r\n            </li>\r\n          </ul>\r\n        </nav> */}\r\n\r\n        <Switch>\r\n          {/* <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <DashBoard onSignOut={onSignOut} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Navigation","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login/login\";\nimport Navigation from \"./router\";\n\n\nfunction App() {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  \n  useEffect(() => {\n    let user = getUser();\n    if (user) {\n      user.password = window.atob(user.password);\n      setUser(user);\n      doLogin();\n    } else {\n      setisLoggedIn(false);\n    }\n  }, [isLoggedIn]);\n\n\n  const getUser = () => {\n    if (window.localStorage.user && window.localStorage.user != null) {\n      return JSON.parse(window.localStorage.user);\n    }\n    return;\n  };\n\n  const handleLogin = () => {\n    let _user = user;\n    _user.password = window.btoa(_user.password);\n    window.localStorage.setItem(\"user\", JSON.stringify(_user));\n    doLogin();\n  };\n\n  const handleUsername = (e) => {\n    setUser({ username: e.target.value, password: user.password });\n  };\n\n  const handlePassword = (e) => {\n    setUser({ username: user.username, password: e.target.value });\n  };\n\n  const doLogin = () => {\n    setisLoggedIn(true);\n  };\n\n  const SignOut = () => {\n    window.localStorage.removeItem(\"user\");\n    setisLoggedIn(false);\n    setUser({});\n  };\n\n  return (\n    <React.Fragment>\n      {isLoggedIn ? (\n        <Navigation onSignOut={SignOut} />\n      ) : (\n        <Login\n          user={user}\n          onLogin={handleLogin}\n          onUsernameChange={handleUsername}\n          onPasswordChange={handlePassword}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}