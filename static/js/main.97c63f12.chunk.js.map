{"version":3,"sources":["components/Login/login.jsx","components/navbar/navbar.jsx","components/Table-View/table.js","components/charts/Charts.js","components/dashboard/dashboard.jsx","router.jsx","App.js","serviceWorker.js","index.js"],"names":["Login","user","onLogin","onPasswordChange","onUsernameChange","isWaiting","className","type","placeholder","value","username","onChange","password","onClick","disabled","href","Navbar","onSignOut","Table","data","cellPadding","cellSpacing","map","T","index","key","label","Math","round","bandwidth","recived_bandwidth","transmit_bandwidth","active_conn_count","Charts","getToken","window","localStorage","getItem","useEffect","fetch","method","headers","authorization","then","res","json","console","log","lineChart","document","getElementById","Chart","labels","message","time","datasets","total","backgroundColor","borderColor","borderWidth","fill","pointBackgroundColor","pointBorderColor","pointBorderWidth","recived","transmited","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","display","cpuPieChart","cpu","percent_used","gridLines","xAxes","ramPieChart","ram","diskPieChart","disk","d","path","id","DashBoard","useState","table","setTable","Fragment","Navigation","App","setUser","isLoggedIn","setisLoggedIn","setIsWaiting","doLogin","token","removeItem","body","JSON","stringify","email","response","undefined","setItem","e","target","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.97c63f12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./login.css\";\r\n\r\nfunction Login({\r\n  user,\r\n  onLogin,\r\n  onPasswordChange,\r\n  onUsernameChange,\r\n  isWaiting,\r\n}) {\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"login__title\">LOGIN</h1>\r\n      <div className=\"login__box\">\r\n        <form>\r\n          <div className=\"login__input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={user.username || \"\"}\r\n              onChange={onUsernameChange}\r\n            />\r\n          </div>\r\n          <div className=\"login__input\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              value={user.password || \"\"}\r\n              onChange={onPasswordChange}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onLogin(user)}\r\n            className=\"login__button\"\r\n            disabled={isWaiting}\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        <a className=\"login__forget__password__link\" href=\"/\">\r\n          Forget password?\r\n        </a>\r\n      </div>\r\n      <p className=\"login__signup\">\r\n        Don't have an account{\" \"}\r\n        <b>\r\n          <u>Sign Up now</u>\r\n        </b>\r\n      </p>\r\n      <p className=\"login__copyrights\">&copy; Copy rights 2020-2021 reserved</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './navbar.css'\r\n\r\n\r\nconst Navbar = ({onSignOut}) => {\r\n    return(\r\n        <div className=\"navbar\">\r\n            <h2>Welcome</h2>\r\n            <button className='navbar__signout' onClick={onSignOut}>Sign Out</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Table = ({ data }) => {\r\n  return (\r\n    <div className=\"dashboard__table\">\r\n      <table cellPadding=\"0\" cellSpacing=\"0\">\r\n        <thead>\r\n          <tr>\r\n            <th>label</th>\r\n            <th>bannedwidth</th>\r\n            <th>recived bandwidth</th>\r\n            <th>transmit bandwidth</th>\r\n            <th>active connection count</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((T, index) => (\r\n            <tr key={index}>\r\n              <td>{T.label}</td>\r\n              <td>{Math.round(T.bandwidth / 1000)} MB</td>\r\n              <td>{Math.round(T.recived_bandwidth / 1024)} MB</td>\r\n              <td>{Math.round(T.transmit_bandwidth / 1024)} MB</td>\r\n              <td>{T.active_conn_count}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect } from \"react\";\r\nimport Chart from 'chart.js'\r\n\r\nconst Charts = () => {\r\n  const getToken = () => {\r\n    return window.localStorage.getItem(\"token\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    //    line chart\r\n    fetch(\"http://128.199.0.16:3000/users/line-graph\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: `bearer ${getToken()}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        const lineChart = document.getElementById(\"lineChart\");\r\n        new Chart(lineChart, {\r\n          type: \"line\",\r\n          data: {\r\n            labels: json.message.time,\r\n            datasets: [\r\n              {\r\n                label: \"total\",\r\n                data: json.message.total,\r\n                backgroundColor: \"#0374ff\",\r\n                borderColor: \"#0374ff\",\r\n                borderWidth: 3,\r\n                fill: false,\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderColor: \"#0374ff\",\r\n                pointBorderWidth: 2,\r\n              },\r\n              {\r\n                label: \"recived\",\r\n                data: json.message.recived,\r\n                backgroundColor: \"#f00\",\r\n                borderColor: \"#f00\",\r\n                borderWidth: 3,\r\n                fill: false,\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderColor: \"#f00\",\r\n                pointBorderWidth: 2,\r\n              },\r\n              {\r\n                label: \"recived\",\r\n                data: json.message.transmited,\r\n                backgroundColor: \"#25c2a0\",\r\n                borderColor: \"#25c2a0\",\r\n                borderWidth: 3,\r\n                fill: false,\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderColor: \"#25c2a0\",\r\n                pointBorderWidth: 2,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        });\r\n      });\r\n\r\n    // pie chart\r\n    fetch(\"http://128.199.0.16:3000/users/pie-chart\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: `bearer ${getToken()}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n\r\n        const cpuPieChart = document.getElementById(\"cpuPieChart\");\r\n        new Chart(cpuPieChart, {\r\n          type: \"pie\",\r\n          data: {\r\n            labels: [\"Used CPU\", \"Unused CPU\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  json.message.cpu.percent_used,\r\n                  100 - json.message.cpu.percent_used,\r\n                ],\r\n                backgroundColor: [\"red\", \"lightgrey\"],\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        });\r\n\r\n        const ramPieChart = document.getElementById(\"ramPieChart\");\r\n        new Chart(ramPieChart, {\r\n          type: \"pie\",\r\n          data: {\r\n            labels: [\"Used RAM\", \"Unused RAM\"],\r\n            datasets: [\r\n              {\r\n                data: [\r\n                  json.message.ram.percent_used,\r\n                  100 - json.message.ram.percent_used,\r\n                ],\r\n                backgroundColor: [\"red\", \"lightgrey\"],\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        });\r\n\r\n        const diskPieChart = document.getElementById(\"diskPieChart\");\r\n        new Chart(diskPieChart, {\r\n          type: \"pie\",\r\n          data: {\r\n            labels: json.message.disk.map((d) => d.path),\r\n            datasets: [\r\n              {\r\n                data: json.message.disk.map((d) => d.percent_used),\r\n                backgroundColor: [\"blue\", \"green\"],\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    display: false,\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        });\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"dashboard__charts\">\r\n      <div className=\"chart__container\">\r\n        <canvas id=\"lineChart\"></canvas>\r\n      </div>\r\n      <div className=\"chart__container\">\r\n        <canvas id=\"cpuPieChart\"></canvas>\r\n      </div>\r\n      <div className=\"chart__container\">\r\n        <canvas id=\"ramPieChart\"></canvas>\r\n      </div>\r\n      <div className=\"chart__container\">\r\n        <canvas id=\"diskPieChart\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../navbar/navbar\";\r\nimport \"./dashboard.css\";\r\nimport Table from \"../Table-View/table\";\r\nimport Charts from \"../charts/Charts\";\r\n\r\nconst DashBoard = ({ onSignOut }) => {\r\n  const [table, setTable] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Table View\r\n    fetch(\"http://128.199.0.16:3000/users/table-view\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: `bearer ${getToken()}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => setTable(json.message));\r\n  }, []);\r\n\r\n  const getToken = () => {\r\n    return window.localStorage.getItem(\"token\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar onSignOut={onSignOut} />\r\n      <div className=\"body__wrapper\">\r\n        <div className=\"sidebar\"></div>\r\n        <div className=\"dashboard\">\r\n          <Charts />\r\n            <Table data={table} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    // Link\r\n  } from \"react-router-dom\";\r\nimport DashBoard from './components/dashboard/dashboard';\r\n\r\n\r\nconst Navigation = ({onSignOut}) => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/users\">Users</Link>\r\n            </li>\r\n          </ul>\r\n        </nav> */}\r\n\r\n        <Switch>\r\n          {/* <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            <Users />\r\n          </Route> */}\r\n          <Route path=\"/\">\r\n            <DashBoard onSignOut={onSignOut} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Navigation","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login/login\";\nimport Navigation from \"./router\";\n\nfunction App() {\n  const [user, setUser] = useState({ username: \"\", password: \"\" });\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  const [isWaiting, setIsWaiting] = useState(false);\n\n  useEffect(() => {\n    let token = getToken();\n    if (token) {\n      doLogin();\n    } else {\n      setisLoggedIn(false);\n    }\n  }, [isLoggedIn]);\n\n  const getToken = () => {\n    if (window.localStorage.token && window.localStorage.token != null) {\n      return window.localStorage.token;\n    }\n    return;\n  };\n\n  const handleLogin = () => {\n    setIsWaiting(true);\n    fetch(\"http://128.199.0.16:3000/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: user.username,\n        password: user.password,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        setIsWaiting(false);\n        if (json.message.token !== undefined) {\n          window.localStorage.setItem(\"token\", json.message.token);\n          doLogin();\n        }\n      });\n  };\n\n  const handleUsername = (e) => {\n    setUser({ username: e.target.value, password: user.password });\n  };\n\n  const handlePassword = (e) => {\n    setUser({ username: user.username, password: e.target.value });\n  };\n\n  const doLogin = () => {\n    setisLoggedIn(true);\n  };\n\n  const SignOut = () => {\n    window.localStorage.removeItem(\"token\");\n    setisLoggedIn(false);\n    setUser({});\n  };\n\n  return (\n    <React.Fragment>\n      {isLoggedIn ? (\n        <Navigation onSignOut={SignOut} />\n      ) : (\n        <Login\n          user={user}\n          onLogin={handleLogin}\n          onUsernameChange={handleUsername}\n          onPasswordChange={handlePassword}\n          isWaiting={isWaiting}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}